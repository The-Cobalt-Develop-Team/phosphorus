# Define a function to declare an option and print its value
function(phosphorus_option opt_name opt_desc opt_default)
    option(${opt_name} "${opt_desc}" ${opt_default})
    message(STATUS "${opt_name}: [${${opt_name}}]")
endfunction()

function(phosphorus_add_example example_name example_standard)
    set(example_source "${PHOSPHORUS_EXAMPLES_DIR}/${example_name}.cpp")
    set(example_target "${example_name}")

    add_executable(${example_target} ${example_source})
    target_link_libraries(${example_target} PRIVATE phosphorus)
    set_target_properties(${example_target} PROPERTIES OUTPUT_NAME ${example_name})
    message(STATUS "Added example: ${example_name}")
    message(STATUS "Example source: ${example_source}")
    message(STATUS "Example target: ${example_target}")
    message(STATUS "Example standard: ${example_standard}")
    set_target_properties(${example_target} PROPERTIES CXX_STANDARD ${example_standard})
endfunction()

function(get_max_cxx_standard output_var)
    include(CheckCXXCompilerFlag)
    set(STANDARDS 23 20 17 14 11)
    foreach (STD IN LISTS STANDARDS)
        if (CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
            set(FLAG "/std:c++${STD}")
        else ()
            set(FLAG "-std=c++${STD}")
        endif ()

        check_cxx_compiler_flag("${FLAG}" FLAG_SUPPORTED)
        if (FLAG_SUPPORTED)
            set(${output_var} ${STD} PARENT_SCOPE)
            return()
        endif ()
    endforeach ()
    # Fall back to CMake builtin variable
    set(${output_var} ${CMAKE_CXX_STANDARD_LATEST} PARENT_SCOPE)
endfunction()
